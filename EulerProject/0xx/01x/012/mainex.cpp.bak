//质数因子[MMA FactorInteger]
#include <cstdio>
#include <vector>
using std::vector;
vector<int> prime;
void PrimeExtern()//每次拓展500
{
    int oldsize = prime.size();
    for(int i=prime[oldsize-1];prime.size()-oldsize<500;i++)
    {
        vector<int>::iterator it;
        for(it=prime.begin();it!=prime.end();it++)
        {
            if(i%*it==0)
                goto todoextern;
        }
        prime.push_back(i);
        todoextern:;
    }
}
int main()
{ 
    prime.push_back(2);
    for(int i=2;prime.size()<1000;i++)//先构建1000个素数
    {
        vector<int>::iterator it;
        for(it=prime.begin();it!=prime.end();it++)
        {
            if(i%*it==0)
                goto continuetodo;
        }
        prime.push_back(i);
        continuetodo:;
    }
    int trianglenum = 2;
    int facts;
	while (trianglenum++)
    {
		int i = (trianglenum+1)*trianglenum / 2;
		printf("\r%d\n\t%d :\t", facts, i);
        facts = 0;//0&itself
        vector<int>::iterator it;
        while(facts<13)//超过//bug
        {
            if(i==1)
                goto TestANew;
			refresh:
            for(it=prime.begin();it!=prime.end()&&i>=*it;it++)
            {
                retry:
                if(i%*it==0)
                {
                    facts++;
                    i /= *it;//IMP:storage factor num not value
					printf("%d\t", *it);
					if (i > *(prime.end() - 1))//may the prime table is too small
					{
						PrimeExtern();
						goto refresh;
					}
                    goto retry;
                }
            }    
        }
		printf("\n%d", (trianglenum + 1)*trianglenum / 2);
        return 0;
        TestANew:;
    }
}